// Code generated by protoc-gen-go-pulsar. DO NOT EDIT.
package multisigv1

import (
	_ "cosmossdk.io/api/cosmos/orm/v1"
	fmt "fmt"
	runtime "github.com/cosmos/cosmos-proto/runtime"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoiface "google.golang.org/protobuf/runtime/protoiface"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	io "io"
	reflect "reflect"
	sync "sync"
)

var _ protoreflect.List = (*_MultisigAccountDetails_1_list)(nil)

type _MultisigAccountDetails_1_list struct {
	list *[][]byte
}

func (x *_MultisigAccountDetails_1_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_MultisigAccountDetails_1_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfBytes((*x.list)[i])
}

func (x *_MultisigAccountDetails_1_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Bytes()
	concreteValue := valueUnwrapped
	(*x.list)[i] = concreteValue
}

func (x *_MultisigAccountDetails_1_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Bytes()
	concreteValue := valueUnwrapped
	*x.list = append(*x.list, concreteValue)
}

func (x *_MultisigAccountDetails_1_list) AppendMutable() protoreflect.Value {
	panic(fmt.Errorf("AppendMutable can not be called on message MultisigAccountDetails at list field Signers as it is not of Message kind"))
}

func (x *_MultisigAccountDetails_1_list) Truncate(n int) {
	*x.list = (*x.list)[:n]
}

func (x *_MultisigAccountDetails_1_list) NewElement() protoreflect.Value {
	var v []byte
	return protoreflect.ValueOfBytes(v)
}

func (x *_MultisigAccountDetails_1_list) IsValid() bool {
	return x.list != nil
}

var (
	md_MultisigAccountDetails            protoreflect.MessageDescriptor
	fd_MultisigAccountDetails_signers    protoreflect.FieldDescriptor
	fd_MultisigAccountDetails_threshold  protoreflect.FieldDescriptor
	fd_MultisigAccountDetails_permission protoreflect.FieldDescriptor
)

func init() {
	file_multisig_v1_state_proto_init()
	md_MultisigAccountDetails = File_multisig_v1_state_proto.Messages().ByName("MultisigAccountDetails")
	fd_MultisigAccountDetails_signers = md_MultisigAccountDetails.Fields().ByName("signers")
	fd_MultisigAccountDetails_threshold = md_MultisigAccountDetails.Fields().ByName("threshold")
	fd_MultisigAccountDetails_permission = md_MultisigAccountDetails.Fields().ByName("permission")
}

var _ protoreflect.Message = (*fastReflection_MultisigAccountDetails)(nil)

type fastReflection_MultisigAccountDetails MultisigAccountDetails

func (x *MultisigAccountDetails) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MultisigAccountDetails)(x)
}

func (x *MultisigAccountDetails) slowProtoReflect() protoreflect.Message {
	mi := &file_multisig_v1_state_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MultisigAccountDetails_messageType fastReflection_MultisigAccountDetails_messageType
var _ protoreflect.MessageType = fastReflection_MultisigAccountDetails_messageType{}

type fastReflection_MultisigAccountDetails_messageType struct{}

func (x fastReflection_MultisigAccountDetails_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MultisigAccountDetails)(nil)
}
func (x fastReflection_MultisigAccountDetails_messageType) New() protoreflect.Message {
	return new(fastReflection_MultisigAccountDetails)
}
func (x fastReflection_MultisigAccountDetails_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MultisigAccountDetails
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MultisigAccountDetails) Descriptor() protoreflect.MessageDescriptor {
	return md_MultisigAccountDetails
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MultisigAccountDetails) Type() protoreflect.MessageType {
	return _fastReflection_MultisigAccountDetails_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MultisigAccountDetails) New() protoreflect.Message {
	return new(fastReflection_MultisigAccountDetails)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MultisigAccountDetails) Interface() protoreflect.ProtoMessage {
	return (*MultisigAccountDetails)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MultisigAccountDetails) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if len(x.Signers) != 0 {
		value := protoreflect.ValueOfList(&_MultisigAccountDetails_1_list{list: &x.Signers})
		if !f(fd_MultisigAccountDetails_signers, value) {
			return
		}
	}
	if x.Threshold != uint32(0) {
		value := protoreflect.ValueOfUint32(x.Threshold)
		if !f(fd_MultisigAccountDetails_threshold, value) {
			return
		}
	}
	if x.Permission != 0 {
		value := protoreflect.ValueOfEnum((protoreflect.EnumNumber)(x.Permission))
		if !f(fd_MultisigAccountDetails_permission, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MultisigAccountDetails) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "multisig.v1.MultisigAccountDetails.signers":
		return len(x.Signers) != 0
	case "multisig.v1.MultisigAccountDetails.threshold":
		return x.Threshold != uint32(0)
	case "multisig.v1.MultisigAccountDetails.permission":
		return x.Permission != 0
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: multisig.v1.MultisigAccountDetails"))
		}
		panic(fmt.Errorf("message multisig.v1.MultisigAccountDetails does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MultisigAccountDetails) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "multisig.v1.MultisigAccountDetails.signers":
		x.Signers = nil
	case "multisig.v1.MultisigAccountDetails.threshold":
		x.Threshold = uint32(0)
	case "multisig.v1.MultisigAccountDetails.permission":
		x.Permission = 0
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: multisig.v1.MultisigAccountDetails"))
		}
		panic(fmt.Errorf("message multisig.v1.MultisigAccountDetails does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MultisigAccountDetails) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "multisig.v1.MultisigAccountDetails.signers":
		if len(x.Signers) == 0 {
			return protoreflect.ValueOfList(&_MultisigAccountDetails_1_list{})
		}
		listValue := &_MultisigAccountDetails_1_list{list: &x.Signers}
		return protoreflect.ValueOfList(listValue)
	case "multisig.v1.MultisigAccountDetails.threshold":
		value := x.Threshold
		return protoreflect.ValueOfUint32(value)
	case "multisig.v1.MultisigAccountDetails.permission":
		value := x.Permission
		return protoreflect.ValueOfEnum((protoreflect.EnumNumber)(value))
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: multisig.v1.MultisigAccountDetails"))
		}
		panic(fmt.Errorf("message multisig.v1.MultisigAccountDetails does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MultisigAccountDetails) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "multisig.v1.MultisigAccountDetails.signers":
		lv := value.List()
		clv := lv.(*_MultisigAccountDetails_1_list)
		x.Signers = *clv.list
	case "multisig.v1.MultisigAccountDetails.threshold":
		x.Threshold = uint32(value.Uint())
	case "multisig.v1.MultisigAccountDetails.permission":
		x.Permission = (MultisigProposalType)(value.Enum())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: multisig.v1.MultisigAccountDetails"))
		}
		panic(fmt.Errorf("message multisig.v1.MultisigAccountDetails does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MultisigAccountDetails) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "multisig.v1.MultisigAccountDetails.signers":
		if x.Signers == nil {
			x.Signers = [][]byte{}
		}
		value := &_MultisigAccountDetails_1_list{list: &x.Signers}
		return protoreflect.ValueOfList(value)
	case "multisig.v1.MultisigAccountDetails.threshold":
		panic(fmt.Errorf("field threshold of message multisig.v1.MultisigAccountDetails is not mutable"))
	case "multisig.v1.MultisigAccountDetails.permission":
		panic(fmt.Errorf("field permission of message multisig.v1.MultisigAccountDetails is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: multisig.v1.MultisigAccountDetails"))
		}
		panic(fmt.Errorf("message multisig.v1.MultisigAccountDetails does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MultisigAccountDetails) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "multisig.v1.MultisigAccountDetails.signers":
		list := [][]byte{}
		return protoreflect.ValueOfList(&_MultisigAccountDetails_1_list{list: &list})
	case "multisig.v1.MultisigAccountDetails.threshold":
		return protoreflect.ValueOfUint32(uint32(0))
	case "multisig.v1.MultisigAccountDetails.permission":
		return protoreflect.ValueOfEnum(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: multisig.v1.MultisigAccountDetails"))
		}
		panic(fmt.Errorf("message multisig.v1.MultisigAccountDetails does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MultisigAccountDetails) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in multisig.v1.MultisigAccountDetails", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MultisigAccountDetails) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MultisigAccountDetails) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MultisigAccountDetails) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MultisigAccountDetails) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MultisigAccountDetails)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if len(x.Signers) > 0 {
			for _, b := range x.Signers {
				l = len(b)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if x.Threshold != 0 {
			n += 1 + runtime.Sov(uint64(x.Threshold))
		}
		if x.Permission != 0 {
			n += 1 + runtime.Sov(uint64(x.Permission))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MultisigAccountDetails)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.Permission != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.Permission))
			i--
			dAtA[i] = 0x20
		}
		if x.Threshold != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.Threshold))
			i--
			dAtA[i] = 0x10
		}
		if len(x.Signers) > 0 {
			for iNdEx := len(x.Signers) - 1; iNdEx >= 0; iNdEx-- {
				i -= len(x.Signers[iNdEx])
				copy(dAtA[i:], x.Signers[iNdEx])
				i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Signers[iNdEx])))
				i--
				dAtA[i] = 0xa
			}
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MultisigAccountDetails)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MultisigAccountDetails: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MultisigAccountDetails: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Signers", wireType)
				}
				var byteLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					byteLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if byteLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + byteLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Signers = append(x.Signers, make([]byte, postIndex-iNdEx))
				copy(x.Signers[len(x.Signers)-1], dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Threshold", wireType)
				}
				x.Threshold = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.Threshold |= uint32(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 4:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Permission", wireType)
				}
				x.Permission = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.Permission |= MultisigProposalType(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var _ protoreflect.List = (*_Proposal_6_list)(nil)

type _Proposal_6_list struct {
	list *[][]byte
}

func (x *_Proposal_6_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_Proposal_6_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfBytes((*x.list)[i])
}

func (x *_Proposal_6_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Bytes()
	concreteValue := valueUnwrapped
	(*x.list)[i] = concreteValue
}

func (x *_Proposal_6_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Bytes()
	concreteValue := valueUnwrapped
	*x.list = append(*x.list, concreteValue)
}

func (x *_Proposal_6_list) AppendMutable() protoreflect.Value {
	panic(fmt.Errorf("AppendMutable can not be called on message Proposal at list field Approvals as it is not of Message kind"))
}

func (x *_Proposal_6_list) Truncate(n int) {
	*x.list = (*x.list)[:n]
}

func (x *_Proposal_6_list) NewElement() protoreflect.Value {
	var v []byte
	return protoreflect.ValueOfBytes(v)
}

func (x *_Proposal_6_list) IsValid() bool {
	return x.list != nil
}

var (
	md_Proposal                  protoreflect.MessageDescriptor
	fd_Proposal_id               protoreflect.FieldDescriptor
	fd_Proposal_multisig_address protoreflect.FieldDescriptor
	fd_Proposal_call_hash        protoreflect.FieldDescriptor
	fd_Proposal_depositor        protoreflect.FieldDescriptor
	fd_Proposal_deposit          protoreflect.FieldDescriptor
	fd_Proposal_approvals        protoreflect.FieldDescriptor
)

func init() {
	file_multisig_v1_state_proto_init()
	md_Proposal = File_multisig_v1_state_proto.Messages().ByName("Proposal")
	fd_Proposal_id = md_Proposal.Fields().ByName("id")
	fd_Proposal_multisig_address = md_Proposal.Fields().ByName("multisig_address")
	fd_Proposal_call_hash = md_Proposal.Fields().ByName("call_hash")
	fd_Proposal_depositor = md_Proposal.Fields().ByName("depositor")
	fd_Proposal_deposit = md_Proposal.Fields().ByName("deposit")
	fd_Proposal_approvals = md_Proposal.Fields().ByName("approvals")
}

var _ protoreflect.Message = (*fastReflection_Proposal)(nil)

type fastReflection_Proposal Proposal

func (x *Proposal) ProtoReflect() protoreflect.Message {
	return (*fastReflection_Proposal)(x)
}

func (x *Proposal) slowProtoReflect() protoreflect.Message {
	mi := &file_multisig_v1_state_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_Proposal_messageType fastReflection_Proposal_messageType
var _ protoreflect.MessageType = fastReflection_Proposal_messageType{}

type fastReflection_Proposal_messageType struct{}

func (x fastReflection_Proposal_messageType) Zero() protoreflect.Message {
	return (*fastReflection_Proposal)(nil)
}
func (x fastReflection_Proposal_messageType) New() protoreflect.Message {
	return new(fastReflection_Proposal)
}
func (x fastReflection_Proposal_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_Proposal
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_Proposal) Descriptor() protoreflect.MessageDescriptor {
	return md_Proposal
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_Proposal) Type() protoreflect.MessageType {
	return _fastReflection_Proposal_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_Proposal) New() protoreflect.Message {
	return new(fastReflection_Proposal)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_Proposal) Interface() protoreflect.ProtoMessage {
	return (*Proposal)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_Proposal) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Id != uint64(0) {
		value := protoreflect.ValueOfUint64(x.Id)
		if !f(fd_Proposal_id, value) {
			return
		}
	}
	if len(x.MultisigAddress) != 0 {
		value := protoreflect.ValueOfBytes(x.MultisigAddress)
		if !f(fd_Proposal_multisig_address, value) {
			return
		}
	}
	if len(x.CallHash) != 0 {
		value := protoreflect.ValueOfBytes(x.CallHash)
		if !f(fd_Proposal_call_hash, value) {
			return
		}
	}
	if len(x.Depositor) != 0 {
		value := protoreflect.ValueOfBytes(x.Depositor)
		if !f(fd_Proposal_depositor, value) {
			return
		}
	}
	if x.Deposit != uint64(0) {
		value := protoreflect.ValueOfUint64(x.Deposit)
		if !f(fd_Proposal_deposit, value) {
			return
		}
	}
	if len(x.Approvals) != 0 {
		value := protoreflect.ValueOfList(&_Proposal_6_list{list: &x.Approvals})
		if !f(fd_Proposal_approvals, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_Proposal) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "multisig.v1.Proposal.id":
		return x.Id != uint64(0)
	case "multisig.v1.Proposal.multisig_address":
		return len(x.MultisigAddress) != 0
	case "multisig.v1.Proposal.call_hash":
		return len(x.CallHash) != 0
	case "multisig.v1.Proposal.depositor":
		return len(x.Depositor) != 0
	case "multisig.v1.Proposal.deposit":
		return x.Deposit != uint64(0)
	case "multisig.v1.Proposal.approvals":
		return len(x.Approvals) != 0
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: multisig.v1.Proposal"))
		}
		panic(fmt.Errorf("message multisig.v1.Proposal does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_Proposal) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "multisig.v1.Proposal.id":
		x.Id = uint64(0)
	case "multisig.v1.Proposal.multisig_address":
		x.MultisigAddress = nil
	case "multisig.v1.Proposal.call_hash":
		x.CallHash = nil
	case "multisig.v1.Proposal.depositor":
		x.Depositor = nil
	case "multisig.v1.Proposal.deposit":
		x.Deposit = uint64(0)
	case "multisig.v1.Proposal.approvals":
		x.Approvals = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: multisig.v1.Proposal"))
		}
		panic(fmt.Errorf("message multisig.v1.Proposal does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_Proposal) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "multisig.v1.Proposal.id":
		value := x.Id
		return protoreflect.ValueOfUint64(value)
	case "multisig.v1.Proposal.multisig_address":
		value := x.MultisigAddress
		return protoreflect.ValueOfBytes(value)
	case "multisig.v1.Proposal.call_hash":
		value := x.CallHash
		return protoreflect.ValueOfBytes(value)
	case "multisig.v1.Proposal.depositor":
		value := x.Depositor
		return protoreflect.ValueOfBytes(value)
	case "multisig.v1.Proposal.deposit":
		value := x.Deposit
		return protoreflect.ValueOfUint64(value)
	case "multisig.v1.Proposal.approvals":
		if len(x.Approvals) == 0 {
			return protoreflect.ValueOfList(&_Proposal_6_list{})
		}
		listValue := &_Proposal_6_list{list: &x.Approvals}
		return protoreflect.ValueOfList(listValue)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: multisig.v1.Proposal"))
		}
		panic(fmt.Errorf("message multisig.v1.Proposal does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_Proposal) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "multisig.v1.Proposal.id":
		x.Id = value.Uint()
	case "multisig.v1.Proposal.multisig_address":
		x.MultisigAddress = value.Bytes()
	case "multisig.v1.Proposal.call_hash":
		x.CallHash = value.Bytes()
	case "multisig.v1.Proposal.depositor":
		x.Depositor = value.Bytes()
	case "multisig.v1.Proposal.deposit":
		x.Deposit = value.Uint()
	case "multisig.v1.Proposal.approvals":
		lv := value.List()
		clv := lv.(*_Proposal_6_list)
		x.Approvals = *clv.list
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: multisig.v1.Proposal"))
		}
		panic(fmt.Errorf("message multisig.v1.Proposal does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_Proposal) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "multisig.v1.Proposal.approvals":
		if x.Approvals == nil {
			x.Approvals = [][]byte{}
		}
		value := &_Proposal_6_list{list: &x.Approvals}
		return protoreflect.ValueOfList(value)
	case "multisig.v1.Proposal.id":
		panic(fmt.Errorf("field id of message multisig.v1.Proposal is not mutable"))
	case "multisig.v1.Proposal.multisig_address":
		panic(fmt.Errorf("field multisig_address of message multisig.v1.Proposal is not mutable"))
	case "multisig.v1.Proposal.call_hash":
		panic(fmt.Errorf("field call_hash of message multisig.v1.Proposal is not mutable"))
	case "multisig.v1.Proposal.depositor":
		panic(fmt.Errorf("field depositor of message multisig.v1.Proposal is not mutable"))
	case "multisig.v1.Proposal.deposit":
		panic(fmt.Errorf("field deposit of message multisig.v1.Proposal is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: multisig.v1.Proposal"))
		}
		panic(fmt.Errorf("message multisig.v1.Proposal does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_Proposal) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "multisig.v1.Proposal.id":
		return protoreflect.ValueOfUint64(uint64(0))
	case "multisig.v1.Proposal.multisig_address":
		return protoreflect.ValueOfBytes(nil)
	case "multisig.v1.Proposal.call_hash":
		return protoreflect.ValueOfBytes(nil)
	case "multisig.v1.Proposal.depositor":
		return protoreflect.ValueOfBytes(nil)
	case "multisig.v1.Proposal.deposit":
		return protoreflect.ValueOfUint64(uint64(0))
	case "multisig.v1.Proposal.approvals":
		list := [][]byte{}
		return protoreflect.ValueOfList(&_Proposal_6_list{list: &list})
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: multisig.v1.Proposal"))
		}
		panic(fmt.Errorf("message multisig.v1.Proposal does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_Proposal) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in multisig.v1.Proposal", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_Proposal) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_Proposal) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_Proposal) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_Proposal) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*Proposal)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.Id != 0 {
			n += 1 + runtime.Sov(uint64(x.Id))
		}
		l = len(x.MultisigAddress)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.CallHash)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Depositor)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.Deposit != 0 {
			n += 1 + runtime.Sov(uint64(x.Deposit))
		}
		if len(x.Approvals) > 0 {
			for _, b := range x.Approvals {
				l = len(b)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*Proposal)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.Approvals) > 0 {
			for iNdEx := len(x.Approvals) - 1; iNdEx >= 0; iNdEx-- {
				i -= len(x.Approvals[iNdEx])
				copy(dAtA[i:], x.Approvals[iNdEx])
				i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Approvals[iNdEx])))
				i--
				dAtA[i] = 0x32
			}
		}
		if x.Deposit != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.Deposit))
			i--
			dAtA[i] = 0x28
		}
		if len(x.Depositor) > 0 {
			i -= len(x.Depositor)
			copy(dAtA[i:], x.Depositor)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Depositor)))
			i--
			dAtA[i] = 0x22
		}
		if len(x.CallHash) > 0 {
			i -= len(x.CallHash)
			copy(dAtA[i:], x.CallHash)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.CallHash)))
			i--
			dAtA[i] = 0x1a
		}
		if len(x.MultisigAddress) > 0 {
			i -= len(x.MultisigAddress)
			copy(dAtA[i:], x.MultisigAddress)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.MultisigAddress)))
			i--
			dAtA[i] = 0x12
		}
		if x.Id != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.Id))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*Proposal)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: Proposal: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: Proposal: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
				}
				x.Id = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.Id |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field MultisigAddress", wireType)
				}
				var byteLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					byteLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if byteLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + byteLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.MultisigAddress = append(x.MultisigAddress[:0], dAtA[iNdEx:postIndex]...)
				if x.MultisigAddress == nil {
					x.MultisigAddress = []byte{}
				}
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field CallHash", wireType)
				}
				var byteLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					byteLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if byteLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + byteLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.CallHash = append(x.CallHash[:0], dAtA[iNdEx:postIndex]...)
				if x.CallHash == nil {
					x.CallHash = []byte{}
				}
				iNdEx = postIndex
			case 4:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Depositor", wireType)
				}
				var byteLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					byteLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if byteLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + byteLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Depositor = append(x.Depositor[:0], dAtA[iNdEx:postIndex]...)
				if x.Depositor == nil {
					x.Depositor = []byte{}
				}
				iNdEx = postIndex
			case 5:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Deposit", wireType)
				}
				x.Deposit = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.Deposit |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 6:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Approvals", wireType)
				}
				var byteLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					byteLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if byteLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + byteLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Approvals = append(x.Approvals, make([]byte, postIndex-iNdEx))
				copy(x.Approvals[len(x.Approvals)-1], dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.0
// 	protoc        (unknown)
// source: multisig/v1/state.proto

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Types of multisig proposal permissions
type MultisigProposalType int32

const (
	// Allow ALL operations by default
	MultisigProposalType_MULTISIG_PROPOSAL_TYPE_UNSPECIFIED MultisigProposalType = 0
	// Allow only transfer operations
	MultisigProposalType_MULTISIG_PROPOSAL_TYPE_TRANSFER_ONLY MultisigProposalType = 1
	// Allow all operations other than transfers
	MultisigProposalType_MULTISIG_PROPOSAL_TYPE_EXCEPT_TRANSFER MultisigProposalType = 2
)

// Enum value maps for MultisigProposalType.
var (
	MultisigProposalType_name = map[int32]string{
		0: "MULTISIG_PROPOSAL_TYPE_UNSPECIFIED",
		1: "MULTISIG_PROPOSAL_TYPE_TRANSFER_ONLY",
		2: "MULTISIG_PROPOSAL_TYPE_EXCEPT_TRANSFER",
	}
	MultisigProposalType_value = map[string]int32{
		"MULTISIG_PROPOSAL_TYPE_UNSPECIFIED":     0,
		"MULTISIG_PROPOSAL_TYPE_TRANSFER_ONLY":   1,
		"MULTISIG_PROPOSAL_TYPE_EXCEPT_TRANSFER": 2,
	}
)

func (x MultisigProposalType) Enum() *MultisigProposalType {
	p := new(MultisigProposalType)
	*p = x
	return p
}

func (x MultisigProposalType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MultisigProposalType) Descriptor() protoreflect.EnumDescriptor {
	return file_multisig_v1_state_proto_enumTypes[0].Descriptor()
}

func (MultisigProposalType) Type() protoreflect.EnumType {
	return &file_multisig_v1_state_proto_enumTypes[0]
}

func (x MultisigProposalType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MultisigProposalType.Descriptor instead.
func (MultisigProposalType) EnumDescriptor() ([]byte, []int) {
	return file_multisig_v1_state_proto_rawDescGZIP(), []int{0}
}

// Details of a multisig account - using Collections approach
type MultisigAccountDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// List of signers for this multisig account
	Signers [][]byte `protobuf:"bytes,1,rep,name=signers,proto3" json:"signers,omitempty"`
	// The threshold of approvers required for the multisig account to be able to execute a call.
	Threshold uint32 `protobuf:"varint,2,opt,name=threshold,proto3" json:"threshold,omitempty"`
	// Permission type for this multisig account
	Permission MultisigProposalType `protobuf:"varint,4,opt,name=permission,proto3,enum=multisig.v1.MultisigProposalType" json:"permission,omitempty"`
}

func (x *MultisigAccountDetails) Reset() {
	*x = MultisigAccountDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_multisig_v1_state_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MultisigAccountDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MultisigAccountDetails) ProtoMessage() {}

// Deprecated: Use MultisigAccountDetails.ProtoReflect.Descriptor instead.
func (*MultisigAccountDetails) Descriptor() ([]byte, []int) {
	return file_multisig_v1_state_proto_rawDescGZIP(), []int{0}
}

func (x *MultisigAccountDetails) GetSigners() [][]byte {
	if x != nil {
		return x.Signers
	}
	return nil
}

func (x *MultisigAccountDetails) GetThreshold() uint32 {
	if x != nil {
		return x.Threshold
	}
	return 0
}

func (x *MultisigAccountDetails) GetPermission() MultisigProposalType {
	if x != nil {
		return x.Permission
	}
	return MultisigProposalType_MULTISIG_PROPOSAL_TYPE_UNSPECIFIED
}

// An open multisig operation.
type Proposal struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Unique identifier for the proposal
	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// The multisig account address this proposal belongs to
	MultisigAddress []byte `protobuf:"bytes,2,opt,name=multisig_address,json=multisigAddress,proto3" json:"multisig_address,omitempty"`
	// The hash of the call to be executed
	CallHash []byte `protobuf:"bytes,3,opt,name=call_hash,json=callHash,proto3" json:"call_hash,omitempty"`
	// The account who opened it (i.e. the first to approve it).
	Depositor []byte `protobuf:"bytes,4,opt,name=depositor,proto3" json:"depositor,omitempty"`
	// The amount held in reserve of the `depositor`, to be returned once the operation ends.
	Deposit uint64 `protobuf:"varint,5,opt,name=deposit,proto3" json:"deposit,omitempty"`
	// The approvals achieved so far, including the depositor.
	Approvals [][]byte `protobuf:"bytes,6,rep,name=approvals,proto3" json:"approvals,omitempty"`
}

func (x *Proposal) Reset() {
	*x = Proposal{}
	if protoimpl.UnsafeEnabled {
		mi := &file_multisig_v1_state_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Proposal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Proposal) ProtoMessage() {}

// Deprecated: Use Proposal.ProtoReflect.Descriptor instead.
func (*Proposal) Descriptor() ([]byte, []int) {
	return file_multisig_v1_state_proto_rawDescGZIP(), []int{1}
}

func (x *Proposal) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Proposal) GetMultisigAddress() []byte {
	if x != nil {
		return x.MultisigAddress
	}
	return nil
}

func (x *Proposal) GetCallHash() []byte {
	if x != nil {
		return x.CallHash
	}
	return nil
}

func (x *Proposal) GetDepositor() []byte {
	if x != nil {
		return x.Depositor
	}
	return nil
}

func (x *Proposal) GetDeposit() uint64 {
	if x != nil {
		return x.Deposit
	}
	return 0
}

func (x *Proposal) GetApprovals() [][]byte {
	if x != nil {
		return x.Approvals
	}
	return nil
}

var File_multisig_v1_state_proto protoreflect.FileDescriptor

var file_multisig_v1_state_proto_rawDesc = []byte{
	0x0a, 0x17, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x73, 0x69, 0x67, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0b, 0x6d, 0x75, 0x6c, 0x74, 0x69,
	0x73, 0x69, 0x67, 0x2e, 0x76, 0x31, 0x1a, 0x17, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2f, 0x6f,
	0x72, 0x6d, 0x2f, 0x76, 0x31, 0x2f, 0x6f, 0x72, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0x93, 0x01, 0x0a, 0x16, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x73, 0x69, 0x67, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x69,
	0x67, 0x6e, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x07, 0x73, 0x69, 0x67,
	0x6e, 0x65, 0x72, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x74, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f,
	0x6c, 0x64, 0x12, 0x41, 0x0a, 0x0a, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x21, 0x2e, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x73, 0x69,
	0x67, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x73, 0x69, 0x67, 0x50, 0x72, 0x6f,
	0x70, 0x6f, 0x73, 0x61, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x70, 0x65, 0x72, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0xfb, 0x01, 0x0a, 0x08, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73,
	0x61, 0x6c, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x29, 0x0a, 0x10, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x73, 0x69, 0x67, 0x5f, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0f, 0x6d, 0x75,
	0x6c, 0x74, 0x69, 0x73, 0x69, 0x67, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1b, 0x0a,
	0x09, 0x63, 0x61, 0x6c, 0x6c, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x08, 0x63, 0x61, 0x6c, 0x6c, 0x48, 0x61, 0x73, 0x68, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x65,
	0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x64,
	0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x65, 0x70, 0x6f,
	0x73, 0x69, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x64, 0x65, 0x70, 0x6f, 0x73,
	0x69, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x61, 0x6c, 0x73, 0x18,
	0x06, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x09, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x61, 0x6c, 0x73,
	0x3a, 0x41, 0xf2, 0x9e, 0xd3, 0x8e, 0x03, 0x3b, 0x0a, 0x06, 0x0a, 0x02, 0x69, 0x64, 0x10, 0x01,
	0x12, 0x20, 0x0a, 0x1a, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x73, 0x69, 0x67, 0x5f, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x2c, 0x63, 0x61, 0x6c, 0x6c, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x10, 0x01,
	0x18, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x10,
	0x02, 0x18, 0x01, 0x2a, 0x94, 0x01, 0x0a, 0x14, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x73, 0x69, 0x67,
	0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x12, 0x26, 0x0a, 0x22,
	0x4d, 0x55, 0x4c, 0x54, 0x49, 0x53, 0x49, 0x47, 0x5f, 0x50, 0x52, 0x4f, 0x50, 0x4f, 0x53, 0x41,
	0x4c, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49,
	0x45, 0x44, 0x10, 0x00, 0x12, 0x28, 0x0a, 0x24, 0x4d, 0x55, 0x4c, 0x54, 0x49, 0x53, 0x49, 0x47,
	0x5f, 0x50, 0x52, 0x4f, 0x50, 0x4f, 0x53, 0x41, 0x4c, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x54,
	0x52, 0x41, 0x4e, 0x53, 0x46, 0x45, 0x52, 0x5f, 0x4f, 0x4e, 0x4c, 0x59, 0x10, 0x01, 0x12, 0x2a,
	0x0a, 0x26, 0x4d, 0x55, 0x4c, 0x54, 0x49, 0x53, 0x49, 0x47, 0x5f, 0x50, 0x52, 0x4f, 0x50, 0x4f,
	0x53, 0x41, 0x4c, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x45, 0x58, 0x43, 0x45, 0x50, 0x54, 0x5f,
	0x54, 0x52, 0x41, 0x4e, 0x53, 0x46, 0x45, 0x52, 0x10, 0x02, 0x42, 0xac, 0x01, 0x0a, 0x0f, 0x63,
	0x6f, 0x6d, 0x2e, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x73, 0x69, 0x67, 0x2e, 0x76, 0x31, 0x42, 0x0a,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x40, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x44, 0x61, 0x65, 0x76, 0x4d, 0x69, 0x74,
	0x68, 0x72, 0x61, 0x6e, 0x2f, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2d, 0x6d, 0x6f, 0x64, 0x75,
	0x6c, 0x65, 0x73, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x73, 0x69, 0x67,
	0x2f, 0x76, 0x31, 0x3b, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x73, 0x69, 0x67, 0x76, 0x31, 0xa2, 0x02,
	0x03, 0x4d, 0x58, 0x58, 0xaa, 0x02, 0x0b, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x73, 0x69, 0x67, 0x2e,
	0x56, 0x31, 0xca, 0x02, 0x0b, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x73, 0x69, 0x67, 0x5c, 0x56, 0x31,
	0xe2, 0x02, 0x17, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x73, 0x69, 0x67, 0x5c, 0x56, 0x31, 0x5c, 0x47,
	0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x0c, 0x4d, 0x75, 0x6c,
	0x74, 0x69, 0x73, 0x69, 0x67, 0x3a, 0x3a, 0x56, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_multisig_v1_state_proto_rawDescOnce sync.Once
	file_multisig_v1_state_proto_rawDescData = file_multisig_v1_state_proto_rawDesc
)

func file_multisig_v1_state_proto_rawDescGZIP() []byte {
	file_multisig_v1_state_proto_rawDescOnce.Do(func() {
		file_multisig_v1_state_proto_rawDescData = protoimpl.X.CompressGZIP(file_multisig_v1_state_proto_rawDescData)
	})
	return file_multisig_v1_state_proto_rawDescData
}

var file_multisig_v1_state_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_multisig_v1_state_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_multisig_v1_state_proto_goTypes = []interface{}{
	(MultisigProposalType)(0),      // 0: multisig.v1.MultisigProposalType
	(*MultisigAccountDetails)(nil), // 1: multisig.v1.MultisigAccountDetails
	(*Proposal)(nil),               // 2: multisig.v1.Proposal
}
var file_multisig_v1_state_proto_depIdxs = []int32{
	0, // 0: multisig.v1.MultisigAccountDetails.permission:type_name -> multisig.v1.MultisigProposalType
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_multisig_v1_state_proto_init() }
func file_multisig_v1_state_proto_init() {
	if File_multisig_v1_state_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_multisig_v1_state_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MultisigAccountDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_multisig_v1_state_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Proposal); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_multisig_v1_state_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_multisig_v1_state_proto_goTypes,
		DependencyIndexes: file_multisig_v1_state_proto_depIdxs,
		EnumInfos:         file_multisig_v1_state_proto_enumTypes,
		MessageInfos:      file_multisig_v1_state_proto_msgTypes,
	}.Build()
	File_multisig_v1_state_proto = out.File
	file_multisig_v1_state_proto_rawDesc = nil
	file_multisig_v1_state_proto_goTypes = nil
	file_multisig_v1_state_proto_depIdxs = nil
}
